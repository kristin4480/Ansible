---
    - hosts: localhost
      name:  DeployUbuntu.yml
      gather_facts: true
      become: false
      vars:
        TempDir:                   /tmp                                 # Temp directory on the Ansible Controller
        WorkingDir:                /tmp/ubuntu20                        # Working directory on the Ansible Controller
        UbuntuISO:                 ubuntu-20.04.5-live-server-amd64.iso # Ubuntu ISO filename
        UbuntuISO_URL:             https://releases.ubuntu.com/20.04/   # Ubuntu ISO URL
        UbuntuNewISO:              ubuntu2004.iso                       # Ubuntu custom ISO name         
        UbuntuVMDiskSize:          50                                   # Ubuntu VM disksize in gigabytes
        UbuntuVMMemorySize:        4096                                 # Ubuntu VM memory size in megabytes
        UbuntuVMCPUs:              4                                    # Ubuntu VM number of CPUs 
        UbuntuVMCPUCores:          4                                    # Ubuntu VM number of cores
        UbuntuVMPortGroup:         'VM Network'                             # Ubuntu VM vSphere portgroup 
        UbuntuOSLocale:            en_US                                # Ubuntu OS locale
        UbuntuOSKeyboardLayout:    en                                   # Ubuntu OS keyboard layout 
        UbuntuOSKeyboardVariant:   us                                   # Ubuntu OS keyboard variant
        UbuntuOSIPv4Address:                             # Ubuntu OS IPv4 address
        UbuntuOSIPv4Gateway:                                 # Ubuntu OS IPv4 gatewayx`
        UbuntuOSIPv4DNS:           8.8.8.8                           # Ubuntu OS DNS server
        UbuntuOSSearchDomain:      ''                             # Ubuntu OS DNS search domain
        UbuntuOSHostname:                                   # Ubuntu OS hostname
        UbuntuOSUser:                                             # Ubuntu OS username
        UbuntuOSPassword:                                       # Ubuntu OS password
        ansible_python_interpreter:     "{{ ansible_playbook_python }}"         # Setting new python intepreter in ansible
     
      tasks:
    
        - name: Create working directory on Ansible Controller
          ansible.builtin.file:
            path: "{{ WorkingDir }}"
            state: directory
     
     
        - name: Check if Ubuntu ISO exists locally on Ansible Controller
          ansible.builtin.stat:
            path: "{{ TempDir }}/{{ UbuntuISO }}"
          register: InstallerFileCheck
     
          #make the task run, until we have the iso on the PC
        - name: Download Ubuntu ISO (if ISO file doesn't exist locally)
          ansible.builtin.get_url:
            url:  "{{ UbuntuISO_URL }}{{ UbuntuISO }}"
            dest: "{{ TempDir }}/{{ UbuntuISO }}"
          when:
            - InstallerFileCheck.stat.exists != true
             
     
        - name: Mount Ubuntu ISO
          become: true
          ansible.posix.mount:
            path:   "{{ WorkingDir }}/iso"
            src:    "{{ TempDir }}/{{ UbuntuISO }}"
            fstype: iso9660
            opts:   ro,noauto
            state:  mounted
     
        - name: Copy txt.cfg from Ubuntu ISO
          ansible.builtin.copy: 
            src: "{{ WorkingDir }}/iso/isolinux/txt.cfg"
            dest: "{{ WorkingDir }}/isocopy/isolinux/"
            mode: "666"
     
     
        - name: Edit txt.cfg to modify append line 
          ansible.builtin.replace:
            dest: "{{ WorkingDir }}/isocopy/isolinux/txt.cfg"
            regexp: 'append   initrd=/casper/initrd quiet  ---'
            replace: 'append   initrd=/casper/initrd quiet --- autoinstall ds=nocloud;s=/cdrom/autoinstall/'
     
     
        - name: Create directory to store user-data and meta-data
          ansible.builtin.file:
            path: "{{ WorkingDir }}/isocopy/autoinstall"
            state: directory
     
     
        - name: Copy user-data file to directory
          ansible.builtin.template: 
            src: ./Ubuntu_user-data.j2
            dest: "{{ WorkingDir }}/isocopy/autoinstall/user-data"
            mode: "666"
     
     
        - name: Create empty meta-data file in directory
          ansible.builtin.file:
            path: "{{ WorkingDir }}/isocopy/autoinstall/meta-data"
            state: touch
            mode: "666"
     
     
        - name: Create custom Ubuntu ISO
    # will create an iso from /tmp/ubuntu20/iso(working directory), will combine it with the files from ./isocopy, and set the bootable flag on the new iso file.
          ansible.builtin.command: "xorrisofs -relaxed-filenames -J -R -o {{ TempDir }}/{{ UbuntuNewISO }} -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table {{ WorkingDir }}/iso/ {{ WorkingDir }}/isocopy/"
          args:
            chdir: "{{ WorkingDir }}/isocopy/"
     
          
        - name: Unmount Ubuntu ISO
          become: true
          ansible.posix.mount:
            path:   "{{ WorkingDir }}/iso"
            src:    "{{ TempDir }}/{{ UbuntuISO }}"
            fstype: iso9660
            opts:   ro,noauto
            state:  absent